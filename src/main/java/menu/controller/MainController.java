package menu.controller;import java.util.List;import menu.domain.Category;import menu.domain.Coach;import menu.service.CategoryService;import menu.service.CoachService;import menu.view.InputView;import menu.view.OutputView;public class MainController {    private final InputView inputView;    private final OutputView outputView;    private final CategoryService categoryService;    private final CoachService coachService;    private final MenuController menuController;    private final CoachController coachController;    private int count = 0;    public MainController() {        this.inputView = new InputView();        this.outputView = new OutputView();        this.categoryService = new CategoryService();        this.menuController = new MenuController(categoryService);        this.coachService = new CoachService();        this.coachController = new CoachController(inputView, coachService);    }    public void init() {        initCategoryService();        menuController.initMenu();        coachSave();        run();    }    public void run() {        categorySelect();        while (count < 5) {            while (!coachController.success(count)) {                String menu = menuController.recommend(count);                coachController.addEatFood(menu, count);            }            count++;        }        outputView.printResultMessage();        outputView.printDay();        List<Category> category = categoryService.getCategory();        outputView.printCategory(category);        List<Coach> coaches = coachService.getCoaches();        for (int i = 0; i < coaches.size(); i++) {            String name = coaches.get(i).getCoachName();            List<String> menu = coaches.get(i).eatMenus();            outputView.printRecommend(menu, name);        }        outputView.printExit();    }    private void categorySelect() {        categoryService.recommend();    }    private void coachSave() {        coachController.init();        coachController.initCoachFood();    }    private void initCategoryService() {        categoryService.initCategory();    }}